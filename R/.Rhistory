map_chi <- function(background, lines, regions = "CAs", title = NULL, title_size = 15) {
spatial_df <- get(regions)
map <- ggplot2::ggplot(spatial_df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group), fill = background) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.3) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(), axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(), axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::ggtitle(title)
map
}
map_chi(background = "lightgrey", lines = "black", regions = "districts", title_size = 13)
map_chi <- function(background, lines, regions = "CAs", title = NULL, title_size = 15) {
spatial_df <- get(regions)
map <- ggplot2::ggplot(spatial_df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group), fill = background) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 1) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(), axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(), axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::ggtitle(title)
map
}
map_chi(background = "lightgrey", lines = "black", regions = "districts", title_size = 13)
map_chi <- function(background, lines, regions = "CAs", title = NULL, title_size = 15) {
spatial_df <- get(regions)
map <- ggplot2::ggplot(spatial_df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group), fill = background) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.5) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(), axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(), axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::ggtitle(title)
map
}
map_chi(background = "lightgrey", lines = "black", regions = "districts", title_size = 13)
map_chi <- function(background, lines, regions = "CAs", title = NULL, title_size = 15) {
spatial_df <- get(regions)
map <- ggplot2::ggplot(spatial_df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group), fill = background) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.2) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(), axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(), axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::ggtitle(title)
map
}
map_chi(background = "lightgrey", lines = "black", regions = "districts", title_size = 13)
map_chi(background = "white", lines = "lightgrey", regions = "districts", title_size = 13)
map_chi(background = "white", lines = "darkgrey", regions = "districts", title_size = 13)
map_chi <- function(background, lines, regions = "CAs", title = NULL, title_size = 15) {
spatial_df <- get(regions)
map <- ggplot2::ggplot(spatial_df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group), fill = background) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(), axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(), axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::ggtitle(title)
map
}
map_chi(background = "white", lines = "darkgrey", regions = "districts", title_size = 13)
data(hom_14)
hom_14
hom_sum <- dplyr::summarise(group_by(hom_14, Community.Area), homicides = n())
library(dplyr)
hom_sum <- dplyr::summarise(group_by(hom_14, Community.Area), homicides = n())
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
heat_map_continuous <- function(regions, summary_df, regions_var,  fill_var,
legend_name, palette = NULL, low_color = "#fff5eb",
high_color = "#7f2704", na_replace = NA, lines = "black",
title = NULL, title_size = 15, region_labels = FALSE) {
if (region_labels == TRUE & !regions %in% c("CAs", "districts")) {
stop("region_labels only available for Community Areas and Police Districts")
}
if (!is.null(palette)) {
colors <- c("green", "blue", "red", "orange", "purple")
low    <- c("#e5f5f9", "#deebf7", "#fee0d2", "#fee6ce", "#efedf5")
high   <- c("#00441b", "#08306b", "#67000d", "#7f2704", "#3f007d")
min_color <- low[colors  == palette]
max_color <- high[colors == palette]
} else {
min_color <- low_color
max_color <- high_color
}
step_1 <- get(regions)
step_1@data$id <- rownames(step_1@data)
step_2 <- ggplot2::fortify(step_1)
chi.df <- merge(step_2, step_1@data, by = "id")
merge_vars <- c("AREA_NUMBE", "TRACTCE10", "DIST_NUM", "ZIP")
types      <- c("CAs", "tracts", "districts", "zips")
merge_var.x <- merge_vars[types == regions]
df <- merge(chi.df, summary_df, by.x = merge_var.x, by.y = regions_var, all.x = TRUE)
df$fill_it <- df[, fill_var]
df$fill_it[is.na(df$fill_it)] <- na_replace
df <- df[order(df$order), ]
if (is.null(lines)) {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
} else {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.15) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
}
if(region_labels == FALSE){
map_output
} else {
centers <- sp::coordinates(step_1)
center_df <- data.frame(num = step_1@data[[merge_var.x]],
center_x = centers[, 1],
center_y = centers[, 2])
map_output + ggplot2::geom_text(data = center_df,
ggplot2::aes(x = center_x,
y = center_y,
label = num))
}
}
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.5) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
heat_map_continuous <- function(regions, summary_df, regions_var,  fill_var,
legend_name, palette = NULL, low_color = "#fff5eb",
high_color = "#7f2704", na_replace = NA, lines = "black",
title = NULL, title_size = 15, region_labels = FALSE) {
if (region_labels == TRUE & !regions %in% c("CAs", "districts")) {
stop("region_labels only available for Community Areas and Police Districts")
}
if (!is.null(palette)) {
colors <- c("green", "blue", "red", "orange", "purple")
low    <- c("#e5f5f9", "#deebf7", "#fee0d2", "#fee6ce", "#efedf5")
high   <- c("#00441b", "#08306b", "#67000d", "#7f2704", "#3f007d")
min_color <- low[colors  == palette]
max_color <- high[colors == palette]
} else {
min_color <- low_color
max_color <- high_color
}
step_1 <- get(regions)
step_1@data$id <- rownames(step_1@data)
step_2 <- ggplot2::fortify(step_1)
chi.df <- merge(step_2, step_1@data, by = "id")
merge_vars <- c("AREA_NUMBE", "TRACTCE10", "DIST_NUM", "ZIP")
types      <- c("CAs", "tracts", "districts", "zips")
merge_var.x <- merge_vars[types == regions]
df <- merge(chi.df, summary_df, by.x = merge_var.x, by.y = regions_var, all.x = TRUE)
df$fill_it <- df[, fill_var]
df$fill_it[is.na(df$fill_it)] <- na_replace
df <- df[order(df$order), ]
if (is.null(lines)) {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
} else {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.5) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
}
if(region_labels == FALSE){
map_output
} else {
centers <- sp::coordinates(step_1)
center_df <- data.frame(num = step_1@data[[merge_var.x]],
center_x = centers[, 1],
center_y = centers[, 2])
map_output + ggplot2::geom_text(data = center_df,
ggplot2::aes(x = center_x,
y = center_y,
label = num))
}
}
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
heat_map_continuous <- function(regions, summary_df, regions_var,  fill_var,
legend_name, palette = NULL, low_color = "#fff5eb",
high_color = "#7f2704", na_replace = NA, lines = "black",
title = NULL, title_size = 15, region_labels = FALSE) {
if (region_labels == TRUE & !regions %in% c("CAs", "districts")) {
stop("region_labels only available for Community Areas and Police Districts")
}
if (!is.null(palette)) {
colors <- c("green", "blue", "red", "orange", "purple")
low    <- c("#e5f5f9", "#deebf7", "#fee0d2", "#fee6ce", "#efedf5")
high   <- c("#00441b", "#08306b", "#67000d", "#7f2704", "#3f007d")
min_color <- low[colors  == palette]
max_color <- high[colors == palette]
} else {
min_color <- low_color
max_color <- high_color
}
step_1 <- get(regions)
step_1@data$id <- rownames(step_1@data)
step_2 <- ggplot2::fortify(step_1)
chi.df <- merge(step_2, step_1@data, by = "id")
merge_vars <- c("AREA_NUMBE", "TRACTCE10", "DIST_NUM", "ZIP")
types      <- c("CAs", "tracts", "districts", "zips")
merge_var.x <- merge_vars[types == regions]
df <- merge(chi.df, summary_df, by.x = merge_var.x, by.y = regions_var, all.x = TRUE)
df$fill_it <- df[, fill_var]
df$fill_it[is.na(df$fill_it)] <- na_replace
df <- df[order(df$order), ]
if (is.null(lines)) {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
} else {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 2) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
}
if(region_labels == FALSE){
map_output
} else {
centers <- sp::coordinates(step_1)
center_df <- data.frame(num = step_1@data[[merge_var.x]],
center_x = centers[, 1],
center_y = centers[, 2])
map_output + ggplot2::geom_text(data = center_df,
ggplot2::aes(x = center_x,
y = center_y,
label = num))
}
}
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
heat_map_continuous <- function(regions, summary_df, regions_var,  fill_var,
legend_name, palette = NULL, low_color = "#fff5eb",
high_color = "#7f2704", na_replace = NA, lines = "black",
title = NULL, title_size = 15, region_labels = FALSE) {
if (region_labels == TRUE & !regions %in% c("CAs", "districts")) {
stop("region_labels only available for Community Areas and Police Districts")
}
if (!is.null(palette)) {
colors <- c("green", "blue", "red", "orange", "purple")
low    <- c("#e5f5f9", "#deebf7", "#fee0d2", "#fee6ce", "#efedf5")
high   <- c("#00441b", "#08306b", "#67000d", "#7f2704", "#3f007d")
min_color <- low[colors  == palette]
max_color <- high[colors == palette]
} else {
min_color <- low_color
max_color <- high_color
}
step_1 <- get(regions)
step_1@data$id <- rownames(step_1@data)
step_2 <- ggplot2::fortify(step_1)
chi.df <- merge(step_2, step_1@data, by = "id")
merge_vars <- c("AREA_NUMBE", "TRACTCE10", "DIST_NUM", "ZIP")
types      <- c("CAs", "tracts", "districts", "zips")
merge_var.x <- merge_vars[types == regions]
df <- merge(chi.df, summary_df, by.x = merge_var.x, by.y = regions_var, all.x = TRUE)
df$fill_it <- df[, fill_var]
df$fill_it[is.na(df$fill_it)] <- na_replace
df <- df[order(df$order), ]
if (is.null(lines)) {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
} else {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 1) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
}
if(region_labels == FALSE){
map_output
} else {
centers <- sp::coordinates(step_1)
center_df <- data.frame(num = step_1@data[[merge_var.x]],
center_x = centers[, 1],
center_y = centers[, 2])
map_output + ggplot2::geom_text(data = center_df,
ggplot2::aes(x = center_x,
y = center_y,
label = num))
}
}
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
heat_map_continuous <- function(regions, summary_df, regions_var,  fill_var,
legend_name, palette = NULL, low_color = "#fff5eb",
high_color = "#7f2704", na_replace = NA, lines = "black",
title = NULL, title_size = 15, region_labels = FALSE) {
if (region_labels == TRUE & !regions %in% c("CAs", "districts")) {
stop("region_labels only available for Community Areas and Police Districts")
}
if (!is.null(palette)) {
colors <- c("green", "blue", "red", "orange", "purple")
low    <- c("#e5f5f9", "#deebf7", "#fee0d2", "#fee6ce", "#efedf5")
high   <- c("#00441b", "#08306b", "#67000d", "#7f2704", "#3f007d")
min_color <- low[colors  == palette]
max_color <- high[colors == palette]
} else {
min_color <- low_color
max_color <- high_color
}
step_1 <- get(regions)
step_1@data$id <- rownames(step_1@data)
step_2 <- ggplot2::fortify(step_1)
chi.df <- merge(step_2, step_1@data, by = "id")
merge_vars <- c("AREA_NUMBE", "TRACTCE10", "DIST_NUM", "ZIP")
types      <- c("CAs", "tracts", "districts", "zips")
merge_var.x <- merge_vars[types == regions]
df <- merge(chi.df, summary_df, by.x = merge_var.x, by.y = regions_var, all.x = TRUE)
df$fill_it <- df[, fill_var]
df$fill_it[is.na(df$fill_it)] <- na_replace
df <- df[order(df$order), ]
if (is.null(lines)) {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
} else {
map_output <- ggplot2::ggplot(df) +
ggplot2::geom_polygon(ggplot2::aes(long, lat, group = group, fill = fill_it)) +
ggplot2::geom_path(ggplot2::aes(long, lat, group = group), color = lines, size = 0.5) +
ggplot2::theme(axis.ticks = ggplot2::element_blank(),
axis.text.x = ggplot2::element_blank(),
axis.text.y = ggplot2::element_blank(),
axis.title = ggplot2::element_blank(),
plot.title = ggplot2::element_text(size = title_size),
panel.background = ggplot2::element_rect(fill = "white"),
panel.grid.major = ggplot2::element_line(colour = "white"),
panel.grid.minor = ggplot2::element_line(colour = "white")) +
ggplot2::coord_equal() +
ggplot2::scale_fill_continuous(low = min_color, high = max_color,
guide = ggplot2::guide_colorbar(title = legend_name,
title.theme = ggplot2::element_text(size = 13, angle = 0),
label.theme = ggplot2::element_text(size = 11, angle = 0))) +
ggplot2::ggtitle(title)
}
if(region_labels == FALSE){
map_output
} else {
centers <- sp::coordinates(step_1)
center_df <- data.frame(num = step_1@data[[merge_var.x]],
center_x = centers[, 1],
center_y = centers[, 2])
map_output + ggplot2::geom_text(data = center_df,
ggplot2::aes(x = center_x,
y = center_y,
label = num))
}
}
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides",
legend_name = "Homicides", na_replace = 0, title = "Homicides by Community Area: 2014", title_size = 13)
?geom_path
heat_map_continuous(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "homicides", legend_name = "Homicides", title = "Homicides by Community Area: 2014", title_size = 13)
colors <- brewer.pal(n = 6, name = "BuPu")
library(RColorBrewer)
zero_homs <- data.frame(Community.Area = c(1:77)[!c(1:77) %in% hom_sum$Community.Area], homicides = 0)
hom_sum   <- rbind(hom_sum, zero_homs)
hom_sum$range <- hom_sum$range <- cut(hom_sum$homicides, c(0, 5, 10, 15, 20, 30, 40), include.lowest = TRUE,
labels = c("0-5", "6-10", "11-15", "16-20", "21-30", "31-40"))
colors <- brewer.pal(n = 6, name = "BuPu")
heat_map_discrete(regions = "CAs", summary_df = hom_sum, regions_var = "Community.Area", fill_var = "range", palette = colors,
legend_name = "Homicides", title = "Homicides by Community Area: 2014", title_size = 13)
